{"version":3,"file":"static/js/981.7a171f4f.chunk.js","mappings":"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","sources":["components/SearchBar.js","components/Pagination.js","components/Home.js"],"sourcesContent":["import React from 'react'\nimport \"../css/SearchBar.css\";\n\nconst SearchBar = ({searchMovie, setSearchMovie}) => {\n    return (\n        <div className=\"searchBar__wrapper\">\n        <div className=\"searchBar__input-data\">\n            <input\n                required\n                title=\"home-search\"\n                className=\"search__input-text\"\n                type=\"text\" \n                value={searchMovie}\n                onChange={(e) => {\n                    setSearchMovie(e.target.value);\n                }}\n            />\n            <label>Search ...</label>\n        </div>\n    </div>\n    )\n}\n\nexport default SearchBar;","import React from \"react\";\nimport \"../css/Pagination.css\";\n\nconst Pagination = ({\nchildren,\nitemsPerPage,\nhandleClickNext,\nhandleClickPrev,\ntotalItems,\ncurrentPage,\nhandleClickPage,\n}) => {\nconst totalPages = Math.ceil(totalItems / itemsPerPage);\n\nconst renderPaginationButtons = () => {\n    const pageButton = (num) => (\n    <button\n        onClick={() => handleClickPage(num)}\n        disabled={num === currentPage}\n    >\n        {num}\n    </button>\n    );\n    const prevButtonEl = (\n    <button onClick={handleClickPrev} disabled={currentPage === 1}>\n        Prev\n    </button>\n    );\n\n    const nextButtonEl = (\n    <button onClick={handleClickNext} disabled={currentPage === totalPages}>\n        Next\n    </button>\n    );\n\n    const firstFiveButtonsEl = Array(5)\n    .fill()\n    .map((_, index) => index + 1)\n    .map((num) => pageButton(num));\n\n    const lastFiveButtonsEl = Array(5)\n    .fill()\n    .map((_, index) => totalPages - 4 + index)\n    .map((num) => pageButton(num));\n\n    const currentPageButtonCluster = Array(3)\n    .fill()\n    .map((_, index) => currentPage + index - 1)\n    .map((num) => pageButton(num));\n\n    const ellipsis = <div>...</div>;\n\n    const firstButtonEl = pageButton(1);\n    const lastButtonEl = pageButton(totalPages);\n\n    let pageButtons;\n\n    if (totalPages <= 7) {\n    pageButtons = Array(totalPages)\n        .fill()\n        .map((_, index) => pageButton(index + 1));\n    } else {\n    if (currentPage <= 4) {\n        pageButtons = [...firstFiveButtonsEl, ellipsis, lastButtonEl];\n    } else if (currentPage > 4 && currentPage < totalPages - 3) {\n        pageButtons = [\n        firstButtonEl,\n        ellipsis,\n        ...currentPageButtonCluster,\n        ellipsis,\n        lastButtonEl,\n        ];\n    } else {\n        pageButtons = [firstButtonEl, ellipsis, ...lastFiveButtonsEl];\n    }\n    }\n\n    return [prevButtonEl, ...pageButtons, nextButtonEl].map((item, key) => \n        React.cloneElement(item, {key})\n    );\n};\n\nreturn (\n    <div className=\"pagination--container\">\n    {children}\n    <div className=\"pagination--button-set\">\n        {totalItems > 0 && renderPaginationButtons()}\n    </div>\n    </div>\n);\n};\n\nexport default Pagination;","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"../css/Home.css\";\nimport \"./SearchBar\";\nimport SearchBar from './SearchBar';\nimport Pagination from \"../components/Pagination\";\n\nconst Home = ({movieData}) => {\n    const [filteredData, setFilteredData] = useState([]);\n    const [searchMovie, setSearchMovie] = useState(\"\");\n    const [genres, setGenres] = useState(\"All\");\n    const [genresOptions, setGenresOptions] = useState([])\n    const [currentPage, setCurrentPage] = useState(1);\n    const recordPerPage = 10;\n\n    useEffect(() => {\n        const genresOptions = movieData?.reduce((previousValue, currentValue) => {\n            var updateArr = [...previousValue];\n            for (var i=0; i<currentValue.genres.length; i++) {\n                if (!(previousValue.includes(currentValue.genres[i]))) {\n                    updateArr.push(currentValue.genres[i]);\n                }\n            }\n            return updateArr; \n        }, [\"All\"]);\n        setGenresOptions(genresOptions)\n    }, [])\n\n    const handleClickPrev = () => {\n        setCurrentPage(currentPage -1);\n    };\n\n    const handleClickNext = () => {\n        setCurrentPage(currentPage +1);\n    }\n\n    const handleClickPage = (targetPage) => {\n        setCurrentPage(targetPage);\n    }\n\n    useEffect(() => {\n        var filterSearchMovie = function(searchWord) {\n            return movieData?.filter(movie => movie.title.toLowerCase().indexOf(searchWord.toLowerCase()) !== -1);\n        }\n        if (genres === \"All\") {\n            setFilteredData(filterSearchMovie(searchMovie));\n        } else {\n            var searchWordFilter = filterSearchMovie(searchMovie);\n            setFilteredData(searchWordFilter?.filter(movie => movie.genres.includes(genres)));\n        }\n    }, [genres, searchMovie])\n\n    return (\n        <div className=\"container--list-item--flex\">\n                <div className=\"container--menu--flex\">\n                    <SearchBar searchMovie={searchMovie} setSearchMovie={setSearchMovie} />\n                    <div className=\"select--label--flex\">\n                        <label>Genres: </label>\n                        <div className=\"select--dropdown\">\n                            <select value={genres} onChange={(event) => setGenres(event.target.value)}>\n                                {genresOptions?.map((ele, i) => {\n                                    return <option key={i} value={ele}>{ele}</option>\n                                })}\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            <ul>\n                {console.log(filteredData)}\n                {filteredData?.length !== 0 ?\n                    filteredData?.slice((currentPage-1)*recordPerPage, (currentPage)*recordPerPage).map((ele) => {\n                        const image = (process.env.PUBLIC_URL + `/assets/moviePosterImages/${ele.id}.jpeg`);\n                        return <Link className=\"container--list-item\" to={`/Movie/${ele.id}`} key={ele.id}>\n                            <h2 className=\"container--list-title--color\">{ele.title}</h2>\n                            <img src={image} onError={(event) => event.target.setAttribute(\"src\", process.env.PUBLIC_URL + `/assets/moviePosterImages/defaultImage.jpeg`)} alt=\"Not working\" /> \n                        </Link>\n                    })\n                    :\n                    <p className=\"message--fallback--text\" >No results were found.</p>\n                }\n                <Pagination\n                    totalPages={filteredData?.length/recordPerPage}\n                    itemsPerPage={recordPerPage}\n                    handleClickPrev={handleClickPrev}\n                    handleClickNext={handleClickNext}\n                    totalItems={filteredData?.length}\n                    currentPage={currentPage}\n                    handleClickPage={handleClickPage}\n                />\n            </ul>\n        </div>\n    )\n};\n\nexport default Home;"],"names":["searchMovie","setSearchMovie","className","required","title","type","value","onChange","e","target","children","itemsPerPage","handleClickNext","handleClickPrev","totalItems","currentPage","handleClickPage","totalPages","Math","ceil","pageButtons","pageButton","num","onClick","disabled","prevButtonEl","nextButtonEl","firstFiveButtonsEl","Array","fill","map","_","index","lastFiveButtonsEl","currentPageButtonCluster","ellipsis","firstButtonEl","lastButtonEl","item","key","React","renderPaginationButtons","movieData","useState","filteredData","setFilteredData","genres","setGenres","genresOptions","setGenresOptions","setCurrentPage","useEffect","reduce","previousValue","currentValue","updateArr","i","length","includes","push","filterSearchMovie","searchWord","filter","movie","toLowerCase","indexOf","searchWordFilter","event","ele","console","log","slice","image","process","id","to","src","onError","setAttribute","alt","targetPage"],"sourceRoot":""}